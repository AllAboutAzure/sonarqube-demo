name: SonarCloud-Analysis
description: "code analysis and code coverage"

inputs:
  project_solution_path:
    description: "path to the project solution"
    required: true
  project_unittest_path:
    description: "path to the unit test solution"
    required: true
  sonarqube_project_id:
    description: "project id"
    required: true
  sonar_token:
    description: "sonar token"
    required: true
  sonarqube_org_id:
    description: "organisation id"
    required: true
   
runs:
  using: "Composite"
  steps:
    - uses: actions/checkout@v2
      with:
      fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: "zulu" # Alternative distribution options are available.
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      env:
        # GITHUB_TOKEN: ${{ inputs.github_token}} # Needed to get PR information, if any
        SONAR_TOKEN: ${{ inputs.sonar_token }}
      shell: powershell
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet tool install --global coverlet.console
        dotnet tool install --global dotnet-sonarscanner
        dotnet add package coverlet.msbuild
        dotnet add package coverlet.collector
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{inputs.sonarqube_project_id}}" /o:"${{inputs.sonarqube_org_id}}" /d:sonar.token="${{ env.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.host.url="https://sonarcloud.io"
        dotnet build "${{inputs.project_solution_path}}"
        dotnet test "${{inputs.project_unittest_path}}" `
        --collect:"XPlat Code Coverage" `
        --results-directory TestResults/ `
        --logger "trx;LogFileName=unittests.trx" `
        --configuration release `
        -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"
